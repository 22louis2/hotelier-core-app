services:
  hotelier-core-app:
    image: hotelier-core-app
    build:
      context: .
      dockerfile: ./src/hotelier-core-app.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DbConnectionString=Host=db;Port=5432;Database=Hotelier.Core;Username=postgres;Password=$POSTGRES_PASSWORD;Include Error Detail=false
    ports:
      - "8080:8080" # Expose app on port 8080
    restart: always # Automatically restart on crash
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: Hotelier.Core
    volumes:
      - db_data:/var/lib/postgresql/data # Persistent storage for database data
    ports:
      - "5432:5432" # Expose PostgreSQL on port 5432
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  reverse-proxy:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Nginx configuration
    ports:
      - "80:80" # Expose port 80 for HTTP
      - "443:443" # Expose port 443 for HTTPS
    depends_on:
      - app
    networks:
      - app-network

volumes:
  db_data: # Persistent volume for database

networks:
  app-network:
    driver: bridge
